{"ast":null,"code":"var BufferBuilder = require('./bufferbuilder').BufferBuilder;\nvar binaryFeatures = require('./bufferbuilder').binaryFeatures;\nvar BinaryPack = {\n  unpack: function (data) {\n    var unpacker = new Unpacker(data);\n    return unpacker.unpack();\n  },\n  pack: function (data) {\n    var packer = new Packer();\n    packer.pack(data);\n    var buffer = packer.getBuffer();\n    return buffer;\n  }\n};\nmodule.exports = BinaryPack;\nfunction Unpacker(data) {\n  // Data is ArrayBuffer\n  this.index = 0;\n  this.dataBuffer = data;\n  this.dataView = new Uint8Array(this.dataBuffer);\n  this.length = this.dataBuffer.byteLength;\n}\nUnpacker.prototype.unpack = function () {\n  var type = this.unpack_uint8();\n  if (type < 0x80) {\n    return type;\n  } else if ((type ^ 0xe0) < 0x20) {\n    return (type ^ 0xe0) - 0x20;\n  }\n  var size;\n  if ((size = type ^ 0xa0) <= 0x0f) {\n    return this.unpack_raw(size);\n  } else if ((size = type ^ 0xb0) <= 0x0f) {\n    return this.unpack_string(size);\n  } else if ((size = type ^ 0x90) <= 0x0f) {\n    return this.unpack_array(size);\n  } else if ((size = type ^ 0x80) <= 0x0f) {\n    return this.unpack_map(size);\n  }\n  switch (type) {\n    case 0xc0:\n      return null;\n    case 0xc1:\n      return undefined;\n    case 0xc2:\n      return false;\n    case 0xc3:\n      return true;\n    case 0xca:\n      return this.unpack_float();\n    case 0xcb:\n      return this.unpack_double();\n    case 0xcc:\n      return this.unpack_uint8();\n    case 0xcd:\n      return this.unpack_uint16();\n    case 0xce:\n      return this.unpack_uint32();\n    case 0xcf:\n      return this.unpack_uint64();\n    case 0xd0:\n      return this.unpack_int8();\n    case 0xd1:\n      return this.unpack_int16();\n    case 0xd2:\n      return this.unpack_int32();\n    case 0xd3:\n      return this.unpack_int64();\n    case 0xd4:\n      return undefined;\n    case 0xd5:\n      return undefined;\n    case 0xd6:\n      return undefined;\n    case 0xd7:\n      return undefined;\n    case 0xd8:\n      size = this.unpack_uint16();\n      return this.unpack_string(size);\n    case 0xd9:\n      size = this.unpack_uint32();\n      return this.unpack_string(size);\n    case 0xda:\n      size = this.unpack_uint16();\n      return this.unpack_raw(size);\n    case 0xdb:\n      size = this.unpack_uint32();\n      return this.unpack_raw(size);\n    case 0xdc:\n      size = this.unpack_uint16();\n      return this.unpack_array(size);\n    case 0xdd:\n      size = this.unpack_uint32();\n      return this.unpack_array(size);\n    case 0xde:\n      size = this.unpack_uint16();\n      return this.unpack_map(size);\n    case 0xdf:\n      size = this.unpack_uint32();\n      return this.unpack_map(size);\n  }\n};\nUnpacker.prototype.unpack_uint8 = function () {\n  var byte = this.dataView[this.index] & 0xff;\n  this.index++;\n  return byte;\n};\nUnpacker.prototype.unpack_uint16 = function () {\n  var bytes = this.read(2);\n  var uint16 = (bytes[0] & 0xff) * 256 + (bytes[1] & 0xff);\n  this.index += 2;\n  return uint16;\n};\nUnpacker.prototype.unpack_uint32 = function () {\n  var bytes = this.read(4);\n  var uint32 = ((bytes[0] * 256 + bytes[1]) * 256 + bytes[2]) * 256 + bytes[3];\n  this.index += 4;\n  return uint32;\n};\nUnpacker.prototype.unpack_uint64 = function () {\n  var bytes = this.read(8);\n  var uint64 = ((((((bytes[0] * 256 + bytes[1]) * 256 + bytes[2]) * 256 + bytes[3]) * 256 + bytes[4]) * 256 + bytes[5]) * 256 + bytes[6]) * 256 + bytes[7];\n  this.index += 8;\n  return uint64;\n};\nUnpacker.prototype.unpack_int8 = function () {\n  var uint8 = this.unpack_uint8();\n  return uint8 < 0x80 ? uint8 : uint8 - (1 << 8);\n};\nUnpacker.prototype.unpack_int16 = function () {\n  var uint16 = this.unpack_uint16();\n  return uint16 < 0x8000 ? uint16 : uint16 - (1 << 16);\n};\nUnpacker.prototype.unpack_int32 = function () {\n  var uint32 = this.unpack_uint32();\n  return uint32 < Math.pow(2, 31) ? uint32 : uint32 - Math.pow(2, 32);\n};\nUnpacker.prototype.unpack_int64 = function () {\n  var uint64 = this.unpack_uint64();\n  return uint64 < Math.pow(2, 63) ? uint64 : uint64 - Math.pow(2, 64);\n};\nUnpacker.prototype.unpack_raw = function (size) {\n  if (this.length < this.index + size) {\n    throw new Error('BinaryPackFailure: index is out of range' + ' ' + this.index + ' ' + size + ' ' + this.length);\n  }\n  var buf = this.dataBuffer.slice(this.index, this.index + size);\n  this.index += size;\n\n  // buf = util.bufferToString(buf);\n\n  return buf;\n};\nUnpacker.prototype.unpack_string = function (size) {\n  var bytes = this.read(size);\n  var i = 0;\n  var str = '';\n  var c;\n  var code;\n  while (i < size) {\n    c = bytes[i];\n    if (c < 128) {\n      str += String.fromCharCode(c);\n      i++;\n    } else if ((c ^ 0xc0) < 32) {\n      code = (c ^ 0xc0) << 6 | bytes[i + 1] & 63;\n      str += String.fromCharCode(code);\n      i += 2;\n    } else {\n      code = (c & 15) << 12 | (bytes[i + 1] & 63) << 6 | bytes[i + 2] & 63;\n      str += String.fromCharCode(code);\n      i += 3;\n    }\n  }\n  this.index += size;\n  return str;\n};\nUnpacker.prototype.unpack_array = function (size) {\n  var objects = new Array(size);\n  for (var i = 0; i < size; i++) {\n    objects[i] = this.unpack();\n  }\n  return objects;\n};\nUnpacker.prototype.unpack_map = function (size) {\n  var map = {};\n  for (var i = 0; i < size; i++) {\n    var key = this.unpack();\n    var value = this.unpack();\n    map[key] = value;\n  }\n  return map;\n};\nUnpacker.prototype.unpack_float = function () {\n  var uint32 = this.unpack_uint32();\n  var sign = uint32 >> 31;\n  var exp = (uint32 >> 23 & 0xff) - 127;\n  var fraction = uint32 & 0x7fffff | 0x800000;\n  return (sign === 0 ? 1 : -1) * fraction * Math.pow(2, exp - 23);\n};\nUnpacker.prototype.unpack_double = function () {\n  var h32 = this.unpack_uint32();\n  var l32 = this.unpack_uint32();\n  var sign = h32 >> 31;\n  var exp = (h32 >> 20 & 0x7ff) - 1023;\n  var hfrac = h32 & 0xfffff | 0x100000;\n  var frac = hfrac * Math.pow(2, exp - 20) + l32 * Math.pow(2, exp - 52);\n  return (sign === 0 ? 1 : -1) * frac;\n};\nUnpacker.prototype.read = function (length) {\n  var j = this.index;\n  if (j + length <= this.length) {\n    return this.dataView.subarray(j, j + length);\n  } else {\n    throw new Error('BinaryPackFailure: read index out of range');\n  }\n};\nfunction Packer() {\n  this.bufferBuilder = new BufferBuilder();\n}\nPacker.prototype.getBuffer = function () {\n  return this.bufferBuilder.getBuffer();\n};\nPacker.prototype.pack = function (value) {\n  var type = typeof value;\n  if (type === 'string') {\n    this.pack_string(value);\n  } else if (type === 'number') {\n    if (Math.floor(value) === value) {\n      this.pack_integer(value);\n    } else {\n      this.pack_double(value);\n    }\n  } else if (type === 'boolean') {\n    if (value === true) {\n      this.bufferBuilder.append(0xc3);\n    } else if (value === false) {\n      this.bufferBuilder.append(0xc2);\n    }\n  } else if (type === 'undefined') {\n    this.bufferBuilder.append(0xc0);\n  } else if (type === 'object') {\n    if (value === null) {\n      this.bufferBuilder.append(0xc0);\n    } else {\n      var constructor = value.constructor;\n      if (constructor == Array) {\n        this.pack_array(value);\n      } else if (constructor == Blob || constructor == File || value instanceof Blob || value instanceof File) {\n        this.pack_bin(value);\n      } else if (constructor == ArrayBuffer) {\n        if (binaryFeatures.useArrayBufferView) {\n          this.pack_bin(new Uint8Array(value));\n        } else {\n          this.pack_bin(value);\n        }\n      } else if ('BYTES_PER_ELEMENT' in value) {\n        if (binaryFeatures.useArrayBufferView) {\n          this.pack_bin(new Uint8Array(value.buffer));\n        } else {\n          this.pack_bin(value.buffer);\n        }\n      } else if (constructor == Object || constructor.toString().startsWith('class')) {\n        this.pack_object(value);\n      } else if (constructor == Date) {\n        this.pack_string(value.toString());\n      } else if (typeof value.toBinaryPack === 'function') {\n        this.bufferBuilder.append(value.toBinaryPack());\n      } else {\n        throw new Error('Type \"' + constructor.toString() + '\" not yet supported');\n      }\n    }\n  } else {\n    throw new Error('Type \"' + type + '\" not yet supported');\n  }\n  this.bufferBuilder.flush();\n};\nPacker.prototype.pack_bin = function (blob) {\n  var length = blob.length || blob.byteLength || blob.size;\n  if (length <= 0x0f) {\n    this.pack_uint8(0xa0 + length);\n  } else if (length <= 0xffff) {\n    this.bufferBuilder.append(0xda);\n    this.pack_uint16(length);\n  } else if (length <= 0xffffffff) {\n    this.bufferBuilder.append(0xdb);\n    this.pack_uint32(length);\n  } else {\n    throw new Error('Invalid length');\n  }\n  this.bufferBuilder.append(blob);\n};\nPacker.prototype.pack_string = function (str) {\n  var length = utf8Length(str);\n  if (length <= 0x0f) {\n    this.pack_uint8(0xb0 + length);\n  } else if (length <= 0xffff) {\n    this.bufferBuilder.append(0xd8);\n    this.pack_uint16(length);\n  } else if (length <= 0xffffffff) {\n    this.bufferBuilder.append(0xd9);\n    this.pack_uint32(length);\n  } else {\n    throw new Error('Invalid length');\n  }\n  this.bufferBuilder.append(str);\n};\nPacker.prototype.pack_array = function (ary) {\n  var length = ary.length;\n  if (length <= 0x0f) {\n    this.pack_uint8(0x90 + length);\n  } else if (length <= 0xffff) {\n    this.bufferBuilder.append(0xdc);\n    this.pack_uint16(length);\n  } else if (length <= 0xffffffff) {\n    this.bufferBuilder.append(0xdd);\n    this.pack_uint32(length);\n  } else {\n    throw new Error('Invalid length');\n  }\n  for (var i = 0; i < length; i++) {\n    this.pack(ary[i]);\n  }\n};\nPacker.prototype.pack_integer = function (num) {\n  if (num >= -0x20 && num <= 0x7f) {\n    this.bufferBuilder.append(num & 0xff);\n  } else if (num >= 0x00 && num <= 0xff) {\n    this.bufferBuilder.append(0xcc);\n    this.pack_uint8(num);\n  } else if (num >= -0x80 && num <= 0x7f) {\n    this.bufferBuilder.append(0xd0);\n    this.pack_int8(num);\n  } else if (num >= 0x0000 && num <= 0xffff) {\n    this.bufferBuilder.append(0xcd);\n    this.pack_uint16(num);\n  } else if (num >= -0x8000 && num <= 0x7fff) {\n    this.bufferBuilder.append(0xd1);\n    this.pack_int16(num);\n  } else if (num >= 0x00000000 && num <= 0xffffffff) {\n    this.bufferBuilder.append(0xce);\n    this.pack_uint32(num);\n  } else if (num >= -0x80000000 && num <= 0x7fffffff) {\n    this.bufferBuilder.append(0xd2);\n    this.pack_int32(num);\n  } else if (num >= -0x8000000000000000 && num <= 0x7FFFFFFFFFFFFFFF) {\n    this.bufferBuilder.append(0xd3);\n    this.pack_int64(num);\n  } else if (num >= 0x0000000000000000 && num <= 0xFFFFFFFFFFFFFFFF) {\n    this.bufferBuilder.append(0xcf);\n    this.pack_uint64(num);\n  } else {\n    throw new Error('Invalid integer');\n  }\n};\nPacker.prototype.pack_double = function (num) {\n  var sign = 0;\n  if (num < 0) {\n    sign = 1;\n    num = -num;\n  }\n  var exp = Math.floor(Math.log(num) / Math.LN2);\n  var frac0 = num / Math.pow(2, exp) - 1;\n  var frac1 = Math.floor(frac0 * Math.pow(2, 52));\n  var b32 = Math.pow(2, 32);\n  var h32 = sign << 31 | exp + 1023 << 20 | frac1 / b32 & 0x0fffff;\n  var l32 = frac1 % b32;\n  this.bufferBuilder.append(0xcb);\n  this.pack_int32(h32);\n  this.pack_int32(l32);\n};\nPacker.prototype.pack_object = function (obj) {\n  var keys = Object.keys(obj);\n  var length = keys.length;\n  if (length <= 0x0f) {\n    this.pack_uint8(0x80 + length);\n  } else if (length <= 0xffff) {\n    this.bufferBuilder.append(0xde);\n    this.pack_uint16(length);\n  } else if (length <= 0xffffffff) {\n    this.bufferBuilder.append(0xdf);\n    this.pack_uint32(length);\n  } else {\n    throw new Error('Invalid length');\n  }\n  for (var prop in obj) {\n    if (obj.hasOwnProperty(prop)) {\n      this.pack(prop);\n      this.pack(obj[prop]);\n    }\n  }\n};\nPacker.prototype.pack_uint8 = function (num) {\n  this.bufferBuilder.append(num);\n};\nPacker.prototype.pack_uint16 = function (num) {\n  this.bufferBuilder.append(num >> 8);\n  this.bufferBuilder.append(num & 0xff);\n};\nPacker.prototype.pack_uint32 = function (num) {\n  var n = num & 0xffffffff;\n  this.bufferBuilder.append((n & 0xff000000) >>> 24);\n  this.bufferBuilder.append((n & 0x00ff0000) >>> 16);\n  this.bufferBuilder.append((n & 0x0000ff00) >>> 8);\n  this.bufferBuilder.append(n & 0x000000ff);\n};\nPacker.prototype.pack_uint64 = function (num) {\n  var high = num / Math.pow(2, 32);\n  var low = num % Math.pow(2, 32);\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\n  this.bufferBuilder.append((high & 0x0000ff00) >>> 8);\n  this.bufferBuilder.append(high & 0x000000ff);\n  this.bufferBuilder.append((low & 0xff000000) >>> 24);\n  this.bufferBuilder.append((low & 0x00ff0000) >>> 16);\n  this.bufferBuilder.append((low & 0x0000ff00) >>> 8);\n  this.bufferBuilder.append(low & 0x000000ff);\n};\nPacker.prototype.pack_int8 = function (num) {\n  this.bufferBuilder.append(num & 0xff);\n};\nPacker.prototype.pack_int16 = function (num) {\n  this.bufferBuilder.append((num & 0xff00) >> 8);\n  this.bufferBuilder.append(num & 0xff);\n};\nPacker.prototype.pack_int32 = function (num) {\n  this.bufferBuilder.append(num >>> 24 & 0xff);\n  this.bufferBuilder.append((num & 0x00ff0000) >>> 16);\n  this.bufferBuilder.append((num & 0x0000ff00) >>> 8);\n  this.bufferBuilder.append(num & 0x000000ff);\n};\nPacker.prototype.pack_int64 = function (num) {\n  var high = Math.floor(num / Math.pow(2, 32));\n  var low = num % Math.pow(2, 32);\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\n  this.bufferBuilder.append((high & 0x0000ff00) >>> 8);\n  this.bufferBuilder.append(high & 0x000000ff);\n  this.bufferBuilder.append((low & 0xff000000) >>> 24);\n  this.bufferBuilder.append((low & 0x00ff0000) >>> 16);\n  this.bufferBuilder.append((low & 0x0000ff00) >>> 8);\n  this.bufferBuilder.append(low & 0x000000ff);\n};\nfunction _utf8Replace(m) {\n  var code = m.charCodeAt(0);\n  if (code <= 0x7ff) return '00';\n  if (code <= 0xffff) return '000';\n  if (code <= 0x1fffff) return '0000';\n  if (code <= 0x3ffffff) return '00000';\n  return '000000';\n}\nfunction utf8Length(str) {\n  if (str.length > 600) {\n    // Blob method faster for large strings\n    return new Blob([str]).size;\n  } else {\n    return str.replace(/[^\\u0000-\\u007F]/g, _utf8Replace).length;\n  }\n}","map":{"version":3,"names":["BufferBuilder","require","binaryFeatures","BinaryPack","unpack","data","unpacker","Unpacker","pack","packer","Packer","buffer","getBuffer","module","exports","index","dataBuffer","dataView","Uint8Array","length","byteLength","prototype","type","unpack_uint8","size","unpack_raw","unpack_string","unpack_array","unpack_map","undefined","unpack_float","unpack_double","unpack_uint16","unpack_uint32","unpack_uint64","unpack_int8","unpack_int16","unpack_int32","unpack_int64","byte","bytes","read","uint16","uint32","uint64","uint8","Math","pow","Error","buf","slice","i","str","c","code","String","fromCharCode","objects","Array","map","key","value","sign","exp","fraction","h32","l32","hfrac","frac","j","subarray","bufferBuilder","pack_string","floor","pack_integer","pack_double","append","constructor","pack_array","Blob","File","pack_bin","ArrayBuffer","useArrayBufferView","Object","toString","startsWith","pack_object","Date","toBinaryPack","flush","blob","pack_uint8","pack_uint16","pack_uint32","utf8Length","ary","num","pack_int8","pack_int16","pack_int32","pack_int64","pack_uint64","log","LN2","frac0","frac1","b32","obj","keys","prop","hasOwnProperty","n","high","low","_utf8Replace","m","charCodeAt","replace"],"sources":["E:/PFE/client/node_modules/peerjs-js-binarypack/lib/binarypack.js"],"sourcesContent":["var BufferBuilder = require('./bufferbuilder').BufferBuilder;\r\nvar binaryFeatures = require('./bufferbuilder').binaryFeatures;\r\n\r\nvar BinaryPack = {\r\n  unpack: function (data) {\r\n    var unpacker = new Unpacker(data);\r\n    return unpacker.unpack();\r\n  },\r\n  pack: function (data) {\r\n    var packer = new Packer();\r\n    packer.pack(data);\r\n    var buffer = packer.getBuffer();\r\n    return buffer;\r\n  }\r\n};\r\n\r\nmodule.exports = BinaryPack;\r\n\r\nfunction Unpacker (data) {\r\n  // Data is ArrayBuffer\r\n  this.index = 0;\r\n  this.dataBuffer = data;\r\n  this.dataView = new Uint8Array(this.dataBuffer);\r\n  this.length = this.dataBuffer.byteLength;\r\n}\r\n\r\nUnpacker.prototype.unpack = function () {\r\n  var type = this.unpack_uint8();\r\n  if (type < 0x80) {\r\n    return type;\r\n  } else if ((type ^ 0xe0) < 0x20) {\r\n    return (type ^ 0xe0) - 0x20;\r\n  }\r\n\r\n  var size;\r\n  if ((size = type ^ 0xa0) <= 0x0f) {\r\n    return this.unpack_raw(size);\r\n  } else if ((size = type ^ 0xb0) <= 0x0f) {\r\n    return this.unpack_string(size);\r\n  } else if ((size = type ^ 0x90) <= 0x0f) {\r\n    return this.unpack_array(size);\r\n  } else if ((size = type ^ 0x80) <= 0x0f) {\r\n    return this.unpack_map(size);\r\n  }\r\n\r\n  switch (type) {\r\n    case 0xc0:\r\n      return null;\r\n    case 0xc1:\r\n      return undefined;\r\n    case 0xc2:\r\n      return false;\r\n    case 0xc3:\r\n      return true;\r\n    case 0xca:\r\n      return this.unpack_float();\r\n    case 0xcb:\r\n      return this.unpack_double();\r\n    case 0xcc:\r\n      return this.unpack_uint8();\r\n    case 0xcd:\r\n      return this.unpack_uint16();\r\n    case 0xce:\r\n      return this.unpack_uint32();\r\n    case 0xcf:\r\n      return this.unpack_uint64();\r\n    case 0xd0:\r\n      return this.unpack_int8();\r\n    case 0xd1:\r\n      return this.unpack_int16();\r\n    case 0xd2:\r\n      return this.unpack_int32();\r\n    case 0xd3:\r\n      return this.unpack_int64();\r\n    case 0xd4:\r\n      return undefined;\r\n    case 0xd5:\r\n      return undefined;\r\n    case 0xd6:\r\n      return undefined;\r\n    case 0xd7:\r\n      return undefined;\r\n    case 0xd8:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_string(size);\r\n    case 0xd9:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_string(size);\r\n    case 0xda:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_raw(size);\r\n    case 0xdb:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_raw(size);\r\n    case 0xdc:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_array(size);\r\n    case 0xdd:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_array(size);\r\n    case 0xde:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_map(size);\r\n    case 0xdf:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_map(size);\r\n  }\r\n};\r\n\r\nUnpacker.prototype.unpack_uint8 = function () {\r\n  var byte = this.dataView[this.index] & 0xff;\r\n  this.index++;\r\n  return byte;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint16 = function () {\r\n  var bytes = this.read(2);\r\n  var uint16 =\r\n    ((bytes[0] & 0xff) * 256) + (bytes[1] & 0xff);\r\n  this.index += 2;\r\n  return uint16;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint32 = function () {\r\n  var bytes = this.read(4);\r\n  var uint32 =\r\n    ((bytes[0] * 256 +\r\n      bytes[1]) * 256 +\r\n      bytes[2]) * 256 +\r\n    bytes[3];\r\n  this.index += 4;\r\n  return uint32;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint64 = function () {\r\n  var bytes = this.read(8);\r\n  var uint64 =\r\n    ((((((bytes[0] * 256 +\r\n      bytes[1]) * 256 +\r\n      bytes[2]) * 256 +\r\n      bytes[3]) * 256 +\r\n      bytes[4]) * 256 +\r\n      bytes[5]) * 256 +\r\n      bytes[6]) * 256 +\r\n    bytes[7];\r\n  this.index += 8;\r\n  return uint64;\r\n};\r\n\r\nUnpacker.prototype.unpack_int8 = function () {\r\n  var uint8 = this.unpack_uint8();\r\n  return (uint8 < 0x80) ? uint8 : uint8 - (1 << 8);\r\n};\r\n\r\nUnpacker.prototype.unpack_int16 = function () {\r\n  var uint16 = this.unpack_uint16();\r\n  return (uint16 < 0x8000) ? uint16 : uint16 - (1 << 16);\r\n};\r\n\r\nUnpacker.prototype.unpack_int32 = function () {\r\n  var uint32 = this.unpack_uint32();\r\n  return (uint32 < Math.pow(2, 31)) ? uint32\r\n    : uint32 - Math.pow(2, 32);\r\n};\r\n\r\nUnpacker.prototype.unpack_int64 = function () {\r\n  var uint64 = this.unpack_uint64();\r\n  return (uint64 < Math.pow(2, 63)) ? uint64\r\n    : uint64 - Math.pow(2, 64);\r\n};\r\n\r\nUnpacker.prototype.unpack_raw = function (size) {\r\n  if (this.length < this.index + size) {\r\n    throw new Error('BinaryPackFailure: index is out of range' +\r\n      ' ' + this.index + ' ' + size + ' ' + this.length);\r\n  }\r\n  var buf = this.dataBuffer.slice(this.index, this.index + size);\r\n  this.index += size;\r\n\r\n  // buf = util.bufferToString(buf);\r\n\r\n  return buf;\r\n};\r\n\r\nUnpacker.prototype.unpack_string = function (size) {\r\n  var bytes = this.read(size);\r\n  var i = 0;\r\n  var str = '';\r\n  var c;\r\n  var code;\r\n\r\n  while (i < size) {\r\n    c = bytes[i];\r\n    if (c < 128) {\r\n      str += String.fromCharCode(c);\r\n      i++;\r\n    } else if ((c ^ 0xc0) < 32) {\r\n      code = ((c ^ 0xc0) << 6) | (bytes[i + 1] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 2;\r\n    } else {\r\n      code = ((c & 15) << 12) | ((bytes[i + 1] & 63) << 6) |\r\n        (bytes[i + 2] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 3;\r\n    }\r\n  }\r\n\r\n  this.index += size;\r\n  return str;\r\n};\r\n\r\nUnpacker.prototype.unpack_array = function (size) {\r\n  var objects = new Array(size);\r\n  for (var i = 0; i < size; i++) {\r\n    objects[i] = this.unpack();\r\n  }\r\n  return objects;\r\n};\r\n\r\nUnpacker.prototype.unpack_map = function (size) {\r\n  var map = {};\r\n  for (var i = 0; i < size; i++) {\r\n    var key = this.unpack();\r\n    var value = this.unpack();\r\n    map[key] = value;\r\n  }\r\n  return map;\r\n};\r\n\r\nUnpacker.prototype.unpack_float = function () {\r\n  var uint32 = this.unpack_uint32();\r\n  var sign = uint32 >> 31;\r\n  var exp = ((uint32 >> 23) & 0xff) - 127;\r\n  var fraction = (uint32 & 0x7fffff) | 0x800000;\r\n  return (sign === 0 ? 1 : -1) *\r\n    fraction * Math.pow(2, exp - 23);\r\n};\r\n\r\nUnpacker.prototype.unpack_double = function () {\r\n  var h32 = this.unpack_uint32();\r\n  var l32 = this.unpack_uint32();\r\n  var sign = h32 >> 31;\r\n  var exp = ((h32 >> 20) & 0x7ff) - 1023;\r\n  var hfrac = (h32 & 0xfffff) | 0x100000;\r\n  var frac = hfrac * Math.pow(2, exp - 20) +\r\n    l32 * Math.pow(2, exp - 52);\r\n  return (sign === 0 ? 1 : -1) * frac;\r\n};\r\n\r\nUnpacker.prototype.read = function (length) {\r\n  var j = this.index;\r\n  if (j + length <= this.length) {\r\n    return this.dataView.subarray(j, j + length);\r\n  } else {\r\n    throw new Error('BinaryPackFailure: read index out of range');\r\n  }\r\n};\r\n\r\nfunction Packer () {\r\n  this.bufferBuilder = new BufferBuilder();\r\n}\r\n\r\nPacker.prototype.getBuffer = function () {\r\n  return this.bufferBuilder.getBuffer();\r\n};\r\n\r\nPacker.prototype.pack = function (value) {\r\n  var type = typeof (value);\r\n  if (type === 'string') {\r\n    this.pack_string(value);\r\n  } else if (type === 'number') {\r\n    if (Math.floor(value) === value) {\r\n      this.pack_integer(value);\r\n    } else {\r\n      this.pack_double(value);\r\n    }\r\n  } else if (type === 'boolean') {\r\n    if (value === true) {\r\n      this.bufferBuilder.append(0xc3);\r\n    } else if (value === false) {\r\n      this.bufferBuilder.append(0xc2);\r\n    }\r\n  } else if (type === 'undefined') {\r\n    this.bufferBuilder.append(0xc0);\r\n  } else if (type === 'object') {\r\n    if (value === null) {\r\n      this.bufferBuilder.append(0xc0);\r\n    } else {\r\n      var constructor = value.constructor;\r\n      if (constructor == Array) {\r\n        this.pack_array(value);\r\n      } else if (constructor == Blob || constructor == File || value instanceof Blob || value instanceof File) {\r\n        this.pack_bin(value);\r\n      } else if (constructor == ArrayBuffer) {\r\n        if (binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value));\r\n        } else {\r\n          this.pack_bin(value);\r\n        }\r\n      } else if ('BYTES_PER_ELEMENT' in value) {\r\n        if (binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value.buffer));\r\n        } else {\r\n          this.pack_bin(value.buffer);\r\n        }\r\n      } else if ((constructor == Object) || (constructor.toString().startsWith('class'))) {\r\n        this.pack_object(value);\r\n      } else if (constructor == Date) {\r\n        this.pack_string(value.toString());\r\n      } else if (typeof value.toBinaryPack === 'function') {\r\n        this.bufferBuilder.append(value.toBinaryPack());\r\n      } else {\r\n        throw new Error('Type \"' + constructor.toString() + '\" not yet supported');\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error('Type \"' + type + '\" not yet supported');\r\n  }\r\n  this.bufferBuilder.flush();\r\n};\r\n\r\nPacker.prototype.pack_bin = function (blob) {\r\n  var length = blob.length || blob.byteLength || blob.size;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0xa0 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xda);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdb);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(blob);\r\n};\r\n\r\nPacker.prototype.pack_string = function (str) {\r\n  var length = utf8Length(str);\r\n\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0xb0 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xd8);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xd9);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(str);\r\n};\r\n\r\nPacker.prototype.pack_array = function (ary) {\r\n  var length = ary.length;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0x90 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xdc);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdd);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  for (var i = 0; i < length; i++) {\r\n    this.pack(ary[i]);\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_integer = function (num) {\r\n  if (num >= -0x20 && num <= 0x7f) {\r\n    this.bufferBuilder.append(num & 0xff);\r\n  } else if (num >= 0x00 && num <= 0xff) {\r\n    this.bufferBuilder.append(0xcc);\r\n    this.pack_uint8(num);\r\n  } else if (num >= -0x80 && num <= 0x7f) {\r\n    this.bufferBuilder.append(0xd0);\r\n    this.pack_int8(num);\r\n  } else if (num >= 0x0000 && num <= 0xffff) {\r\n    this.bufferBuilder.append(0xcd);\r\n    this.pack_uint16(num);\r\n  } else if (num >= -0x8000 && num <= 0x7fff) {\r\n    this.bufferBuilder.append(0xd1);\r\n    this.pack_int16(num);\r\n  } else if (num >= 0x00000000 && num <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xce);\r\n    this.pack_uint32(num);\r\n  } else if (num >= -0x80000000 && num <= 0x7fffffff) {\r\n    this.bufferBuilder.append(0xd2);\r\n    this.pack_int32(num);\r\n  } else if (num >= -0x8000000000000000 && num <= 0x7FFFFFFFFFFFFFFF) {\r\n    this.bufferBuilder.append(0xd3);\r\n    this.pack_int64(num);\r\n  } else if (num >= 0x0000000000000000 && num <= 0xFFFFFFFFFFFFFFFF) {\r\n    this.bufferBuilder.append(0xcf);\r\n    this.pack_uint64(num);\r\n  } else {\r\n    throw new Error('Invalid integer');\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_double = function (num) {\r\n  var sign = 0;\r\n  if (num < 0) {\r\n    sign = 1;\r\n    num = -num;\r\n  }\r\n  var exp = Math.floor(Math.log(num) / Math.LN2);\r\n  var frac0 = num / Math.pow(2, exp) - 1;\r\n  var frac1 = Math.floor(frac0 * Math.pow(2, 52));\r\n  var b32 = Math.pow(2, 32);\r\n  var h32 = (sign << 31) | ((exp + 1023) << 20) |\r\n    (frac1 / b32) & 0x0fffff;\r\n  var l32 = frac1 % b32;\r\n  this.bufferBuilder.append(0xcb);\r\n  this.pack_int32(h32);\r\n  this.pack_int32(l32);\r\n};\r\n\r\nPacker.prototype.pack_object = function (obj) {\r\n  var keys = Object.keys(obj);\r\n  var length = keys.length;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0x80 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xde);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdf);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  for (var prop in obj) {\r\n    if (obj.hasOwnProperty(prop)) {\r\n      this.pack(prop);\r\n      this.pack(obj[prop]);\r\n    }\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_uint8 = function (num) {\r\n  this.bufferBuilder.append(num);\r\n};\r\n\r\nPacker.prototype.pack_uint16 = function (num) {\r\n  this.bufferBuilder.append(num >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_uint32 = function (num) {\r\n  var n = num & 0xffffffff;\r\n  this.bufferBuilder.append((n & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((n & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((n & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((n & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_uint64 = function (num) {\r\n  var high = num / Math.pow(2, 32);\r\n  var low = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((low & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_int8 = function (num) {\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_int16 = function (num) {\r\n  this.bufferBuilder.append((num & 0xff00) >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_int32 = function (num) {\r\n  this.bufferBuilder.append((num >>> 24) & 0xff);\r\n  this.bufferBuilder.append((num & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((num & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((num & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_int64 = function (num) {\r\n  var high = Math.floor(num / Math.pow(2, 32));\r\n  var low = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((low & 0x000000ff));\r\n};\r\n\r\nfunction _utf8Replace (m) {\r\n  var code = m.charCodeAt(0);\r\n\r\n  if (code <= 0x7ff) return '00';\r\n  if (code <= 0xffff) return '000';\r\n  if (code <= 0x1fffff) return '0000';\r\n  if (code <= 0x3ffffff) return '00000';\r\n  return '000000';\r\n}\r\n\r\nfunction utf8Length (str) {\r\n  if (str.length > 600) {\r\n    // Blob method faster for large strings\r\n    return (new Blob([str])).size;\r\n  } else {\r\n    return str.replace(/[^\\u0000-\\u007F]/g, _utf8Replace).length;\r\n  }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}