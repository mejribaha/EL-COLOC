{"ast":null,"code":"var _jsxFileName = \"E:\\\\PFE\\\\client\\\\src\\\\customRouter\\\\PageRender.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport NotFound from '../components/NotFound';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generatePage = pageName => {\n  const component = () => require(`../pages/${pageName}`).default;\n  try {\n    return /*#__PURE__*/React.createElement(component());\n  } catch (err) {\n    return /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  }\n};\nconst PageRender = () => {\n  _s();\n  const {\n    page,\n    id\n  } = useParams();\n  const {\n    auth\n  } = useSelector(state => state);\n  let pageName = \"\";\n  if (auth.token) {\n    if (id) {\n      pageName = `${page}/[id]`;\n    } else {\n      pageName = `${page}`;\n    }\n  }\n  return generatePage(pageName);\n};\n_s(PageRender, \"GE//sCE6WuI+55Xr0p+Gay63knI=\", false, function () {\n  return [useParams, useSelector];\n});\n_c = PageRender;\nexport default PageRender;\nvar _c;\n$RefreshReg$(_c, \"PageRender\");","map":{"version":3,"names":["React","useParams","NotFound","useSelector","jsxDEV","_jsxDEV","generatePage","pageName","component","require","default","createElement","err","fileName","_jsxFileName","lineNumber","columnNumber","PageRender","_s","page","id","auth","state","token","_c","$RefreshReg$"],"sources":["E:/PFE/client/src/customRouter/PageRender.js"],"sourcesContent":["import React from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport NotFound from '../components/NotFound'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst generatePage = (pageName) => {\r\n    const component = () => require(`../pages/${pageName}`).default\r\n\r\n    try {\r\n        return React.createElement(component())\r\n    } catch (err) {\r\n        return <NotFound />\r\n    }\r\n}\r\n\r\nconst PageRender = () => {\r\n    const {page, id} = useParams()\r\n    const { auth } = useSelector(state => state)\r\n\r\n    let pageName = \"\";\r\n\r\n    if(auth.token){\r\n        if(id){\r\n            pageName = `${page}/[id]`\r\n        }else{\r\n            pageName = `${page}`\r\n        }\r\n    }\r\n\r\n    return generatePage(pageName)\r\n}\r\n\r\nexport default PageRender\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,SAAS,QAAO,kBAAkB;AAC1C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,WAAW,QAAQ,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,YAAY,GAAIC,QAAQ,IAAK;EAC/B,MAAMC,SAAS,GAAGA,CAAA,KAAMC,OAAO,CAAE,YAAWF,QAAS,EAAC,CAAC,CAACG,OAAO;EAE/D,IAAI;IACA,oBAAOV,KAAK,CAACW,aAAa,CAACH,SAAS,CAAC,CAAC,CAAC;EAC3C,CAAC,CAAC,OAAOI,GAAG,EAAE;IACV,oBAAOP,OAAA,CAACH,QAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACvB;AACJ,CAAC;AAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAACC,IAAI;IAAEC;EAAE,CAAC,GAAGnB,SAAS,CAAC,CAAC;EAC9B,MAAM;IAAEoB;EAAK,CAAC,GAAGlB,WAAW,CAACmB,KAAK,IAAIA,KAAK,CAAC;EAE5C,IAAIf,QAAQ,GAAG,EAAE;EAEjB,IAAGc,IAAI,CAACE,KAAK,EAAC;IACV,IAAGH,EAAE,EAAC;MACFb,QAAQ,GAAI,GAAEY,IAAK,OAAM;IAC7B,CAAC,MAAI;MACDZ,QAAQ,GAAI,GAAEY,IAAK,EAAC;IACxB;EACJ;EAEA,OAAOb,YAAY,CAACC,QAAQ,CAAC;AACjC,CAAC;AAAAW,EAAA,CAfKD,UAAU;EAAA,QACOhB,SAAS,EACXE,WAAW;AAAA;AAAAqB,EAAA,GAF1BP,UAAU;AAiBhB,eAAeA,UAAU;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}