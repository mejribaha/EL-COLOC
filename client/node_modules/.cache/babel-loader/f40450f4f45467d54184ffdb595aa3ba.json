{"ast":null,"code":"import { GLOBALTYPES, DeleteData } from '../actions/globalTypes';\nimport { postDataAPI, getDataAPI, deleteDataAPI } from '../../utils/fetchData';\nexport const MESS_TYPES = {\n  ADD_USER: 'ADD_USER',\n  ADD_MESSAGE: 'ADD_MESSAGE',\n  GET_CONVERSATIONS: 'GET_CONVERSATIONS',\n  GET_MESSAGES: 'GET_MESSAGES',\n  UPDATE_MESSAGES: 'UPDATE_MESSAGES',\n  DELETE_MESSAGES: 'DELETE_MESSAGES',\n  DELETE_CONVERSATION: 'DELETE_CONVERSATION',\n  CHECK_ONLINE_OFFLINE: 'CHECK_ONLINE_OFFLINE'\n};\nexport const addMessage = _ref => {\n  let {\n    msg,\n    auth,\n    socket\n  } = _ref;\n  return async dispatch => {\n    dispatch({\n      type: MESS_TYPES.ADD_MESSAGE,\n      payload: msg\n    });\n    const {\n      _id,\n      avatar,\n      fullname,\n      username\n    } = auth.user;\n    socket.emit('addMessage', {\n      ...msg,\n      user: {\n        _id,\n        avatar,\n        fullname,\n        username\n      }\n    });\n    try {\n      await postDataAPI('message', msg, auth.token);\n    } catch (err) {\n      dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {\n          error: err.response.data.msg\n        }\n      });\n    }\n  };\n};\nexport const getConversations = _ref2 => {\n  let {\n    auth,\n    page = 1\n  } = _ref2;\n  return async dispatch => {\n    try {\n      const res = await getDataAPI(`conversations?limit=${page * 9}`, auth.token);\n      let newArr = [];\n      res.data.conversations.forEach(item => {\n        item.recipients.forEach(cv => {\n          if (cv._id !== auth.user._id) {\n            newArr.push({\n              ...cv,\n              text: item.text,\n              media: item.media,\n              call: item.call\n            });\n          }\n        });\n      });\n      dispatch({\n        type: MESS_TYPES.GET_CONVERSATIONS,\n        payload: {\n          newArr,\n          result: res.data.result\n        }\n      });\n    } catch (err) {\n      dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {\n          error: err.response.data.msg\n        }\n      });\n    }\n  };\n};\nexport const getMessages = _ref3 => {\n  let {\n    auth,\n    id,\n    page = 1\n  } = _ref3;\n  return async dispatch => {\n    try {\n      const res = await getDataAPI(`message/${id}?limit=${page * 9}`, auth.token);\n      const newData = {\n        ...res.data,\n        messages: res.data.messages.reverse()\n      };\n      dispatch({\n        type: MESS_TYPES.GET_MESSAGES,\n        payload: {\n          ...newData,\n          _id: id,\n          page\n        }\n      });\n    } catch (err) {\n      dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {\n          error: err.response.data.msg\n        }\n      });\n    }\n  };\n};\nexport const loadMoreMessages = _ref4 => {\n  let {\n    auth,\n    id,\n    page = 1\n  } = _ref4;\n  return async dispatch => {\n    try {\n      const res = await getDataAPI(`message/${id}?limit=${page * 9}`, auth.token);\n      const newData = {\n        ...res.data,\n        messages: res.data.messages.reverse()\n      };\n      dispatch({\n        type: MESS_TYPES.UPDATE_MESSAGES,\n        payload: {\n          ...newData,\n          _id: id,\n          page\n        }\n      });\n    } catch (err) {\n      dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {\n          error: err.response.data.msg\n        }\n      });\n    }\n  };\n};\nexport const deleteMessages = _ref5 => {\n  let {\n    msg,\n    data,\n    auth\n  } = _ref5;\n  return async dispatch => {\n    const newData = DeleteData(data, msg._id);\n    dispatch({\n      type: MESS_TYPES.DELETE_MESSAGES,\n      payload: {\n        newData,\n        _id: msg.recipient\n      }\n    });\n    try {\n      await deleteDataAPI(`message/${msg._id}`, auth.token);\n    } catch (err) {\n      dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {\n          error: err.response.data.msg\n        }\n      });\n    }\n  };\n};\nexport const deleteConversation = _ref6 => {\n  let {\n    auth,\n    id\n  } = _ref6;\n  return async dispatch => {\n    dispatch({\n      type: MESS_TYPES.DELETE_CONVERSATION,\n      payload: id\n    });\n    try {\n      await deleteDataAPI(`conversation/${id}`, auth.token);\n    } catch (err) {\n      dispatch({\n        type: GLOBALTYPES.ALERT,\n        payload: {\n          error: err.response.data.msg\n        }\n      });\n    }\n  };\n};","map":{"version":3,"names":["GLOBALTYPES","DeleteData","postDataAPI","getDataAPI","deleteDataAPI","MESS_TYPES","ADD_USER","ADD_MESSAGE","GET_CONVERSATIONS","GET_MESSAGES","UPDATE_MESSAGES","DELETE_MESSAGES","DELETE_CONVERSATION","CHECK_ONLINE_OFFLINE","addMessage","_ref","msg","auth","socket","dispatch","type","payload","_id","avatar","fullname","username","user","emit","token","err","ALERT","error","response","data","getConversations","_ref2","page","res","newArr","conversations","forEach","item","recipients","cv","push","text","media","call","result","getMessages","_ref3","id","newData","messages","reverse","loadMoreMessages","_ref4","deleteMessages","_ref5","recipient","deleteConversation","_ref6"],"sources":["E:/PFE/client/src/redux/actions/messageAction.js"],"sourcesContent":["import { GLOBALTYPES, DeleteData } from '../actions/globalTypes'\r\nimport { postDataAPI, getDataAPI, deleteDataAPI } from '../../utils/fetchData'\r\n\r\nexport const MESS_TYPES = {\r\n    ADD_USER: 'ADD_USER',\r\n    ADD_MESSAGE: 'ADD_MESSAGE',\r\n    GET_CONVERSATIONS: 'GET_CONVERSATIONS',\r\n    GET_MESSAGES: 'GET_MESSAGES',\r\n    UPDATE_MESSAGES: 'UPDATE_MESSAGES',\r\n    DELETE_MESSAGES: 'DELETE_MESSAGES',\r\n    DELETE_CONVERSATION: 'DELETE_CONVERSATION',\r\n    CHECK_ONLINE_OFFLINE: 'CHECK_ONLINE_OFFLINE'\r\n}\r\n\r\n\r\n\r\nexport const addMessage = ({msg, auth, socket}) => async (dispatch) =>{\r\n    dispatch({type: MESS_TYPES.ADD_MESSAGE, payload: msg})\r\n\r\n    const { _id, avatar, fullname, username } = auth.user\r\n    socket.emit('addMessage', {...msg, user: { _id, avatar, fullname, username } })\r\n    \r\n    try {\r\n        await postDataAPI('message', msg, auth.token)\r\n    } catch (err) {\r\n        dispatch({type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg}})\r\n    }\r\n}\r\n\r\nexport const getConversations = ({auth, page = 1}) => async (dispatch) => {\r\n    try {\r\n        const res = await getDataAPI(`conversations?limit=${page * 9}`, auth.token)\r\n        \r\n        let newArr = [];\r\n        res.data.conversations.forEach(item => {\r\n            item.recipients.forEach(cv => {\r\n                if(cv._id !== auth.user._id){\r\n                    newArr.push({...cv, text: item.text, media: item.media, call: item.call})\r\n                }\r\n            })\r\n        })\r\n\r\n        dispatch({\r\n            type: MESS_TYPES.GET_CONVERSATIONS, \r\n            payload: {newArr, result: res.data.result}\r\n        })\r\n\r\n    } catch (err) {\r\n        dispatch({type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg}})\r\n    }\r\n}\r\n\r\nexport const getMessages = ({auth, id, page = 1}) => async (dispatch) => {\r\n    try {\r\n        const res = await getDataAPI(`message/${id}?limit=${page * 9}`, auth.token)\r\n        const newData = {...res.data, messages: res.data.messages.reverse()}\r\n\r\n        dispatch({type: MESS_TYPES.GET_MESSAGES, payload: {...newData, _id: id, page}})\r\n    } catch (err) {\r\n        dispatch({type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg}})\r\n    }\r\n}\r\n\r\nexport const loadMoreMessages = ({auth, id, page = 1}) => async (dispatch) => {\r\n    try {\r\n        const res = await getDataAPI(`message/${id}?limit=${page * 9}`, auth.token)\r\n        const newData = {...res.data, messages: res.data.messages.reverse()}\r\n\r\n        dispatch({type: MESS_TYPES.UPDATE_MESSAGES, payload: {...newData, _id: id, page}})\r\n    } catch (err) {\r\n        dispatch({type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg}})\r\n    }\r\n}\r\n\r\nexport const deleteMessages = ({msg, data, auth}) => async (dispatch) => {\r\n    const newData = DeleteData(data, msg._id)\r\n    dispatch({type: MESS_TYPES.DELETE_MESSAGES, payload: {newData, _id: msg.recipient}})\r\n    try {\r\n        await deleteDataAPI(`message/${msg._id}`, auth.token)\r\n    } catch (err) {\r\n        dispatch({type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg}})\r\n    }\r\n}\r\n\r\nexport const deleteConversation = ({auth, id}) => async (dispatch) => {\r\n    dispatch({type: MESS_TYPES.DELETE_CONVERSATION, payload: id})\r\n    try {\r\n        await deleteDataAPI(`conversation/${id}`, auth.token)\r\n    } catch (err) {\r\n        dispatch({type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg}})\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}