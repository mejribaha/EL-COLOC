{"ast":null,"code":"const valid = _ref => {\n  let {\n    fullname,\n    username,\n    email,\n    password,\n    cf_password\n  } = _ref;\n  const err = {};\n  if (!fullname) {\n    err.fullname = \"Please add your full name.\";\n  } else if (fullname.length > 25) {\n    err.fullname = \"Full name is up to 25 characters long.\";\n  }\n  if (!username) {\n    err.username = \"Please add your user name.\";\n  } else if (username.replace(/ /g, \"\").length > 25) {\n    err.username = \"User name is up to 25 characters long.\";\n  }\n  if (!email) {\n    err.email = \"Please add your email.\";\n  } else if (!validateEmail(email)) {\n    err.email = \"Email format is incorrect.\";\n  }\n  if (!password) {\n    err.password = \"Please add your password.\";\n  } else if (password.length < 6) {\n    err.password = \"Password must be at least 6 characters.\";\n  }\n  if (password !== cf_password) {\n    err.cf_password = \"Confirm password did not match.\";\n  }\n  return {\n    errMsg: err,\n    errLength: Object.keys(err).length\n  };\n};\nfunction validateEmail(email) {\n  // eslint-disable-next-line\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(email);\n}\nexport default valid;","map":{"version":3,"names":["valid","_ref","fullname","username","email","password","cf_password","err","length","replace","validateEmail","errMsg","errLength","Object","keys","re","test"],"sources":["E:/PFE/client/src/utils/valid.js"],"sourcesContent":["const valid = ({ fullname, username, email, password, cf_password }) => {\r\n  const err = {};\r\n\r\n  if (!fullname) {\r\n    err.fullname = \"Please add your full name.\";\r\n  } else if (fullname.length > 25) {\r\n    err.fullname = \"Full name is up to 25 characters long.\";\r\n  }\r\n\r\n  if (!username) {\r\n    err.username = \"Please add your user name.\";\r\n  } else if (username.replace(/ /g, \"\").length > 25) {\r\n    err.username = \"User name is up to 25 characters long.\";\r\n  }\r\n\r\n  if (!email) {\r\n    err.email = \"Please add your email.\";\r\n  } else if (!validateEmail(email)) {\r\n    err.email = \"Email format is incorrect.\";\r\n  }\r\n\r\n  if (!password) {\r\n    err.password = \"Please add your password.\";\r\n  } else if (password.length < 6) {\r\n    err.password = \"Password must be at least 6 characters.\";\r\n  }\r\n\r\n  if (password !== cf_password) {\r\n    err.cf_password = \"Confirm password did not match.\";\r\n  }\r\n\r\n  return {\r\n    errMsg: err,\r\n    errLength: Object.keys(err).length,\r\n  };\r\n};\r\n\r\nfunction validateEmail(email) {\r\n  // eslint-disable-next-line\r\n  const re =\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(email);\r\n}\r\n\r\nexport default valid;\r\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,IAAA,IAA0D;EAAA,IAAzD;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAY,CAAC,GAAAL,IAAA;EACjE,MAAMM,GAAG,GAAG,CAAC,CAAC;EAEd,IAAI,CAACL,QAAQ,EAAE;IACbK,GAAG,CAACL,QAAQ,GAAG,4BAA4B;EAC7C,CAAC,MAAM,IAAIA,QAAQ,CAACM,MAAM,GAAG,EAAE,EAAE;IAC/BD,GAAG,CAACL,QAAQ,GAAG,wCAAwC;EACzD;EAEA,IAAI,CAACC,QAAQ,EAAE;IACbI,GAAG,CAACJ,QAAQ,GAAG,4BAA4B;EAC7C,CAAC,MAAM,IAAIA,QAAQ,CAACM,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAACD,MAAM,GAAG,EAAE,EAAE;IACjDD,GAAG,CAACJ,QAAQ,GAAG,wCAAwC;EACzD;EAEA,IAAI,CAACC,KAAK,EAAE;IACVG,GAAG,CAACH,KAAK,GAAG,wBAAwB;EACtC,CAAC,MAAM,IAAI,CAACM,aAAa,CAACN,KAAK,CAAC,EAAE;IAChCG,GAAG,CAACH,KAAK,GAAG,4BAA4B;EAC1C;EAEA,IAAI,CAACC,QAAQ,EAAE;IACbE,GAAG,CAACF,QAAQ,GAAG,2BAA2B;EAC5C,CAAC,MAAM,IAAIA,QAAQ,CAACG,MAAM,GAAG,CAAC,EAAE;IAC9BD,GAAG,CAACF,QAAQ,GAAG,yCAAyC;EAC1D;EAEA,IAAIA,QAAQ,KAAKC,WAAW,EAAE;IAC5BC,GAAG,CAACD,WAAW,GAAG,iCAAiC;EACrD;EAEA,OAAO;IACLK,MAAM,EAAEJ,GAAG;IACXK,SAAS,EAAEC,MAAM,CAACC,IAAI,CAACP,GAAG,CAAC,CAACC;EAC9B,CAAC;AACH,CAAC;AAED,SAASE,aAAaA,CAACN,KAAK,EAAE;EAC5B;EACA,MAAMW,EAAE,GACN,2JAA2J;EAC7J,OAAOA,EAAE,CAACC,IAAI,CAACZ,KAAK,CAAC;AACvB;AAEA,eAAeJ,KAAK"},"metadata":{},"sourceType":"module"}