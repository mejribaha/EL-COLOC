{"ast":null,"code":"import { MESS_TYPES } from '../actions/messageAction';\nimport { EditData, DeleteData } from '../actions/globalTypes';\nconst initialState = {\n  users: [],\n  resultUsers: 0,\n  data: [],\n  firstLoad: false\n};\nconst messageReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case MESS_TYPES.ADD_USER:\n      if (state.users.every(item => item._id !== action.payload._id)) {\n        return {\n          ...state,\n          users: [action.payload, ...state.users]\n        };\n      }\n      return state;\n    case MESS_TYPES.ADD_MESSAGE:\n      return {\n        ...state,\n        data: state.data.map(item => item._id === action.payload.recipient || item._id === action.payload.sender ? {\n          ...item,\n          messages: [...item.messages, action.payload],\n          result: item.result + 1\n        } : item),\n        users: state.users.map(user => user._id === action.payload.recipient || user._id === action.payload.sender ? {\n          ...user,\n          text: action.payload.text,\n          media: action.payload.media,\n          call: action.payload.call\n        } : user)\n      };\n    case MESS_TYPES.GET_CONVERSATIONS:\n      return {\n        ...state,\n        users: action.payload.newArr,\n        resultUsers: action.payload.result,\n        firstLoad: true\n      };\n    case MESS_TYPES.GET_MESSAGES:\n      return {\n        ...state,\n        data: [...state.data, action.payload]\n      };\n    case MESS_TYPES.UPDATE_MESSAGES:\n      return {\n        ...state,\n        data: EditData(state.data, action.payload._id, action.payload)\n      };\n    case MESS_TYPES.DELETE_MESSAGES:\n      return {\n        ...state,\n        data: state.data.map(item => item._id === action.payload._id ? {\n          ...item,\n          messages: action.payload.newData\n        } : item)\n      };\n    case MESS_TYPES.DELETE_CONVERSATION:\n      return {\n        ...state,\n        users: DeleteData(state.users, action.payload),\n        data: DeleteData(state.data, action.payload)\n      };\n    case MESS_TYPES.CHECK_ONLINE_OFFLINE:\n      return {\n        ...state,\n        users: state.users.map(user => action.payload.includes(user._id) ? {\n          ...user,\n          online: true\n        } : {\n          ...user,\n          online: false\n        })\n      };\n    default:\n      return state;\n  }\n};\nexport default messageReducer;","map":{"version":3,"names":["MESS_TYPES","EditData","DeleteData","initialState","users","resultUsers","data","firstLoad","messageReducer","state","arguments","length","undefined","action","type","ADD_USER","every","item","_id","payload","ADD_MESSAGE","map","recipient","sender","messages","result","user","text","media","call","GET_CONVERSATIONS","newArr","GET_MESSAGES","UPDATE_MESSAGES","DELETE_MESSAGES","newData","DELETE_CONVERSATION","CHECK_ONLINE_OFFLINE","includes","online"],"sources":["E:/PFE/client/src/redux/reducers/messageReducer.js"],"sourcesContent":["import { MESS_TYPES } from '../actions/messageAction'\r\nimport { EditData, DeleteData } from '../actions/globalTypes'\r\n\r\nconst initialState = {\r\n    users: [],\r\n    resultUsers: 0,\r\n    data: [],\r\n    firstLoad: false\r\n}\r\n\r\nconst messageReducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case MESS_TYPES.ADD_USER:\r\n            if(state.users.every(item => item._id !== action.payload._id)){\r\n                return {\r\n                    ...state,\r\n                    users: [action.payload, ...state.users]\r\n                };\r\n            }\r\n            return state;\r\n        case MESS_TYPES.ADD_MESSAGE:\r\n            return {\r\n                ...state,\r\n                data: state.data.map(item => \r\n                    item._id === action.payload.recipient || item._id === action.payload.sender \r\n                    ? {\r\n                        ...item,\r\n                        messages: [...item.messages, action.payload],\r\n                        result: item.result + 1\r\n                    }\r\n                    : item\r\n                ),\r\n                users: state.users.map(user => \r\n                    user._id === action.payload.recipient || user._id === action.payload.sender\r\n                    ? {\r\n                        ...user, \r\n                        text: action.payload.text, \r\n                        media: action.payload.media,\r\n                        call: action.payload.call\r\n                    }\r\n                    : user\r\n                )\r\n            };\r\n        case MESS_TYPES.GET_CONVERSATIONS:\r\n            return {\r\n                ...state,\r\n                users: action.payload.newArr,\r\n                resultUsers: action.payload.result,\r\n                firstLoad: true\r\n            };\r\n        case MESS_TYPES.GET_MESSAGES:\r\n            return {\r\n                ...state,\r\n                data: [...state.data, action.payload]\r\n            };\r\n        case MESS_TYPES.UPDATE_MESSAGES:\r\n            return {\r\n                ...state,\r\n                data: EditData(state.data, action.payload._id, action.payload)\r\n            };\r\n        case MESS_TYPES.DELETE_MESSAGES:\r\n            return {\r\n                ...state,\r\n                data: state.data.map(item => \r\n                    item._id === action.payload._id\r\n                    ? {...item, messages: action.payload.newData}\r\n                    : item\r\n                )\r\n            };\r\n        case MESS_TYPES.DELETE_CONVERSATION:\r\n            return {\r\n                ...state,\r\n                users: DeleteData(state.users, action.payload),\r\n                data: DeleteData(state.data, action.payload)\r\n            };\r\n        case MESS_TYPES.CHECK_ONLINE_OFFLINE:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => \r\n                    action.payload.includes(user._id)\r\n                    ? {...user, online: true}\r\n                    : {...user, online: false}\r\n                )\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default messageReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}