{"ast":null,"code":"/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\nexports.shimRTCIceCandidate = shimRTCIceCandidate;\nexports.shimMaxMessageSize = shimMaxMessageSize;\nexports.shimSendThrowTypeError = shimSendThrowTypeError;\nexports.shimConnectionState = shimConnectionState;\nexports.removeExtmapAllowMixed = removeExtmapAllowMixed;\nexports.shimAddIceCandidateNullOrEmpty = shimAddIceCandidateNullOrEmpty;\nvar _sdp = require('sdp');\nvar _sdp2 = _interopRequireDefault(_sdp);\nvar _utils = require('./utils');\nvar utils = _interopRequireWildcard(_utils);\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || window.RTCIceCandidate && 'foundation' in window.RTCIceCandidate.prototype) {\n    return;\n  }\n  var NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function RTCIceCandidate(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if ((typeof args === 'undefined' ? 'undefined' : _typeof(args)) === 'object' && args.candidate && args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substr(2);\n    }\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      var nativeCandidate = new NativeRTCIceCandidate(args);\n      var parsedCandidate = _sdp2.default.parseCandidate(args.candidate);\n      var augmentedCandidate = Object.assign(nativeCandidate, parsedCandidate);\n\n      // Add a serializer that does not serialize the extra attributes.\n      augmentedCandidate.toJSON = function toJSON() {\n        return {\n          candidate: augmentedCandidate.candidate,\n          sdpMid: augmentedCandidate.sdpMid,\n          sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n          usernameFragment: augmentedCandidate.usernameFragment\n        };\n      };\n      return augmentedCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', function (e) {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\nfunction shimMaxMessageSize(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get: function get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n  var sctpInDescription = function sctpInDescription(description) {\n    if (!description || !description.sdp) {\n      return false;\n    }\n    var sections = _sdp2.default.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(function (mediaSection) {\n      var mLine = _sdp2.default.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application' && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n  var getRemoteFirefoxVersion = function getRemoteFirefoxVersion(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    var match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    var version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n  var getCanSendMaxMessageSize = function getCanSendMaxMessageSize(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    var canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize = browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n  var getMaxMessageSize = function getMaxMessageSize(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    var maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox' && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n    var match = _sdp2.default.matchPrefix(description.sdp, 'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substr(19), 10);\n    } else if (browserDetails.browser === 'firefox' && remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n  var origSetRemoteDescription = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription() {\n    this._sctp = null;\n    // Chrome decided to not expose .sctp in plan-b mode.\n    // As usual, adapter.js has to do an 'ugly worakaround'\n    // to cover up the mess.\n    if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {\n      var _getConfiguration = this.getConfiguration(),\n        sdpSemantics = _getConfiguration.sdpSemantics;\n      if (sdpSemantics === 'plan-b') {\n        Object.defineProperty(this, 'sctp', {\n          get: function get() {\n            return typeof this._sctp === 'undefined' ? null : this._sctp;\n          },\n          enumerable: true,\n          configurable: true\n        });\n      }\n    }\n    if (sctpInDescription(arguments[0])) {\n      // Check if the remote is FF.\n      var isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n      // Get the maximum message size the local peer is capable of sending\n      var canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n      // Get the maximum message size of the remote peer.\n      var remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n      // Determine final maximum message size\n      var maxMessageSize = void 0;\n      if (canSendMMS === 0 && remoteMMS === 0) {\n        maxMessageSize = Number.POSITIVE_INFINITY;\n      } else if (canSendMMS === 0 || remoteMMS === 0) {\n        maxMessageSize = Math.max(canSendMMS, remoteMMS);\n      } else {\n        maxMessageSize = Math.min(canSendMMS, remoteMMS);\n      }\n\n      // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n      // attribute.\n      var sctp = {};\n      Object.defineProperty(sctp, 'maxMessageSize', {\n        get: function get() {\n          return maxMessageSize;\n        }\n      });\n      this._sctp = sctp;\n    }\n    return origSetRemoteDescription.apply(this, arguments);\n  };\n}\nfunction shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection && 'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    var origDataChannelSend = dc.send;\n    dc.send = function send() {\n      var data = arguments[0];\n      var length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' && pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' + pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  var origCreateDataChannel = window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel = function createDataChannel() {\n    var dataChannel = origCreateDataChannel.apply(this, arguments);\n    wrapDcSend(dataChannel, this);\n    return dataChannel;\n  };\n  utils.wrapPeerConnectionEvent(window, 'datachannel', function (e) {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\nfunction shimConnectionState(window) {\n  if (!window.RTCPeerConnection || 'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  var proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get: function get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get: function get() {\n      return this._onconnectionstatechange || null;\n    },\n    set: function set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange', this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange', this._onconnectionstatechange = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n  ['setLocalDescription', 'setRemoteDescription'].forEach(function (method) {\n    var origMethod = proto[method];\n    proto[method] = function () {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = function (e) {\n          var pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            var newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange', this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\nfunction removeExtmapAllowMixed(window, browserDetails) {\n  /* remove a=extmap-allow-mixed for webrtc.org < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n  if (browserDetails.browser === 'safari' && browserDetails.version >= 605) {\n    return;\n  }\n  var nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      var sdp = desc.sdp.split('\\n').filter(function (line) {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n      // Safari enforces read-only-ness of RTCSessionDescription fields.\n      if (window.RTCSessionDescription && desc instanceof window.RTCSessionDescription) {\n        arguments[0] = new window.RTCSessionDescription({\n          type: desc.type,\n          sdp: sdp\n        });\n      } else {\n        desc.sdp = sdp;\n      }\n    }\n    return nativeSRD.apply(this, arguments);\n  };\n}\nfunction shimAddIceCandidateNullOrEmpty(window, browserDetails) {\n  // Support for addIceCandidate(null or undefined)\n  // as well as addIceCandidate({candidate: \"\", ...})\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=978582\n  // Note: must be called before other polyfills which change the signature.\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  var nativeAddIceCandidate = window.RTCPeerConnection.prototype.addIceCandidate;\n  if (!nativeAddIceCandidate || nativeAddIceCandidate.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.addIceCandidate = function addIceCandidate() {\n    if (!arguments[0]) {\n      if (arguments[1]) {\n        arguments[1].apply(null);\n      }\n      return Promise.resolve();\n    }\n    // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n    // in older versions.\n    // Native support for ignoring exists for Chrome M77+.\n    // Safari ignores as well, exact version unknown but works in the same\n    // version that also ignores addIceCandidate(null).\n    if ((browserDetails.browser === 'chrome' && browserDetails.version < 78 || browserDetails.browser === 'firefox' && browserDetails.version < 68 || browserDetails.browser === 'safari') && arguments[0] && arguments[0].candidate === '') {\n      return Promise.resolve();\n    }\n    return nativeAddIceCandidate.apply(this, arguments);\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","_typeof","Symbol","iterator","obj","constructor","prototype","shimRTCIceCandidate","shimMaxMessageSize","shimSendThrowTypeError","shimConnectionState","removeExtmapAllowMixed","shimAddIceCandidateNullOrEmpty","_sdp","require","_sdp2","_interopRequireDefault","_utils","utils","_interopRequireWildcard","__esModule","newObj","key","hasOwnProperty","call","default","window","RTCIceCandidate","NativeRTCIceCandidate","args","candidate","indexOf","JSON","parse","stringify","substr","length","nativeCandidate","parsedCandidate","parseCandidate","augmentedCandidate","assign","toJSON","sdpMid","sdpMLineIndex","usernameFragment","wrapPeerConnectionEvent","e","writable","browserDetails","RTCPeerConnection","get","_sctp","sctpInDescription","description","sdp","sections","splitSections","shift","some","mediaSection","mLine","parseMLine","kind","protocol","getRemoteFirefoxVersion","match","version","parseInt","getCanSendMaxMessageSize","remoteIsFirefox","canSendMaxMessageSize","browser","getMaxMessageSize","maxMessageSize","matchPrefix","origSetRemoteDescription","setRemoteDescription","_getConfiguration","getConfiguration","sdpSemantics","enumerable","configurable","arguments","isFirefox","canSendMMS","remoteMMS","Number","POSITIVE_INFINITY","Math","max","min","sctp","apply","wrapDcSend","dc","pc","origDataChannelSend","send","data","size","byteLength","readyState","TypeError","origCreateDataChannel","createDataChannel","dataChannel","channel","target","proto","completed","checking","iceConnectionState","_onconnectionstatechange","set","cb","removeEventListener","addEventListener","forEach","method","origMethod","_connectionstatechangepoly","_lastConnectionState","connectionState","newEvent","Event","dispatchEvent","nativeSRD","desc","split","filter","line","trim","join","RTCSessionDescription","type","nativeAddIceCandidate","addIceCandidate","Promise","resolve"],"sources":["E:/PFE/client/node_modules/webrtc-adapter/dist/common_shim.js"],"sourcesContent":["/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.shimRTCIceCandidate = shimRTCIceCandidate;\nexports.shimMaxMessageSize = shimMaxMessageSize;\nexports.shimSendThrowTypeError = shimSendThrowTypeError;\nexports.shimConnectionState = shimConnectionState;\nexports.removeExtmapAllowMixed = removeExtmapAllowMixed;\nexports.shimAddIceCandidateNullOrEmpty = shimAddIceCandidateNullOrEmpty;\n\nvar _sdp = require('sdp');\n\nvar _sdp2 = _interopRequireDefault(_sdp);\n\nvar _utils = require('./utils');\n\nvar utils = _interopRequireWildcard(_utils);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || window.RTCIceCandidate && 'foundation' in window.RTCIceCandidate.prototype) {\n    return;\n  }\n\n  var NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function RTCIceCandidate(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if ((typeof args === 'undefined' ? 'undefined' : _typeof(args)) === 'object' && args.candidate && args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substr(2);\n    }\n\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      var nativeCandidate = new NativeRTCIceCandidate(args);\n      var parsedCandidate = _sdp2.default.parseCandidate(args.candidate);\n      var augmentedCandidate = Object.assign(nativeCandidate, parsedCandidate);\n\n      // Add a serializer that does not serialize the extra attributes.\n      augmentedCandidate.toJSON = function toJSON() {\n        return {\n          candidate: augmentedCandidate.candidate,\n          sdpMid: augmentedCandidate.sdpMid,\n          sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n          usernameFragment: augmentedCandidate.usernameFragment\n        };\n      };\n      return augmentedCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', function (e) {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\n\nfunction shimMaxMessageSize(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get: function get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n\n  var sctpInDescription = function sctpInDescription(description) {\n    if (!description || !description.sdp) {\n      return false;\n    }\n    var sections = _sdp2.default.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(function (mediaSection) {\n      var mLine = _sdp2.default.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application' && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n\n  var getRemoteFirefoxVersion = function getRemoteFirefoxVersion(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    var match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    var version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n\n  var getCanSendMaxMessageSize = function getCanSendMaxMessageSize(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    var canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize = browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n\n  var getMaxMessageSize = function getMaxMessageSize(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    var maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox' && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n\n    var match = _sdp2.default.matchPrefix(description.sdp, 'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substr(19), 10);\n    } else if (browserDetails.browser === 'firefox' && remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n\n  var origSetRemoteDescription = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription() {\n    this._sctp = null;\n    // Chrome decided to not expose .sctp in plan-b mode.\n    // As usual, adapter.js has to do an 'ugly worakaround'\n    // to cover up the mess.\n    if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {\n      var _getConfiguration = this.getConfiguration(),\n          sdpSemantics = _getConfiguration.sdpSemantics;\n\n      if (sdpSemantics === 'plan-b') {\n        Object.defineProperty(this, 'sctp', {\n          get: function get() {\n            return typeof this._sctp === 'undefined' ? null : this._sctp;\n          },\n\n          enumerable: true,\n          configurable: true\n        });\n      }\n    }\n\n    if (sctpInDescription(arguments[0])) {\n      // Check if the remote is FF.\n      var isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n      // Get the maximum message size the local peer is capable of sending\n      var canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n      // Get the maximum message size of the remote peer.\n      var remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n      // Determine final maximum message size\n      var maxMessageSize = void 0;\n      if (canSendMMS === 0 && remoteMMS === 0) {\n        maxMessageSize = Number.POSITIVE_INFINITY;\n      } else if (canSendMMS === 0 || remoteMMS === 0) {\n        maxMessageSize = Math.max(canSendMMS, remoteMMS);\n      } else {\n        maxMessageSize = Math.min(canSendMMS, remoteMMS);\n      }\n\n      // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n      // attribute.\n      var sctp = {};\n      Object.defineProperty(sctp, 'maxMessageSize', {\n        get: function get() {\n          return maxMessageSize;\n        }\n      });\n      this._sctp = sctp;\n    }\n\n    return origSetRemoteDescription.apply(this, arguments);\n  };\n}\n\nfunction shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection && 'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    var origDataChannelSend = dc.send;\n    dc.send = function send() {\n      var data = arguments[0];\n      var length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' && pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' + pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  var origCreateDataChannel = window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel = function createDataChannel() {\n    var dataChannel = origCreateDataChannel.apply(this, arguments);\n    wrapDcSend(dataChannel, this);\n    return dataChannel;\n  };\n  utils.wrapPeerConnectionEvent(window, 'datachannel', function (e) {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\nfunction shimConnectionState(window) {\n  if (!window.RTCPeerConnection || 'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  var proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get: function get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get: function get() {\n      return this._onconnectionstatechange || null;\n    },\n    set: function set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange', this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange', this._onconnectionstatechange = cb);\n      }\n    },\n\n    enumerable: true,\n    configurable: true\n  });\n\n  ['setLocalDescription', 'setRemoteDescription'].forEach(function (method) {\n    var origMethod = proto[method];\n    proto[method] = function () {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = function (e) {\n          var pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            var newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange', this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\n\nfunction removeExtmapAllowMixed(window, browserDetails) {\n  /* remove a=extmap-allow-mixed for webrtc.org < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n  if (browserDetails.browser === 'safari' && browserDetails.version >= 605) {\n    return;\n  }\n  var nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription = function setRemoteDescription(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      var sdp = desc.sdp.split('\\n').filter(function (line) {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n      // Safari enforces read-only-ness of RTCSessionDescription fields.\n      if (window.RTCSessionDescription && desc instanceof window.RTCSessionDescription) {\n        arguments[0] = new window.RTCSessionDescription({\n          type: desc.type,\n          sdp: sdp\n        });\n      } else {\n        desc.sdp = sdp;\n      }\n    }\n    return nativeSRD.apply(this, arguments);\n  };\n}\n\nfunction shimAddIceCandidateNullOrEmpty(window, browserDetails) {\n  // Support for addIceCandidate(null or undefined)\n  // as well as addIceCandidate({candidate: \"\", ...})\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=978582\n  // Note: must be called before other polyfills which change the signature.\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  var nativeAddIceCandidate = window.RTCPeerConnection.prototype.addIceCandidate;\n  if (!nativeAddIceCandidate || nativeAddIceCandidate.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.addIceCandidate = function addIceCandidate() {\n    if (!arguments[0]) {\n      if (arguments[1]) {\n        arguments[1].apply(null);\n      }\n      return Promise.resolve();\n    }\n    // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n    // in older versions.\n    // Native support for ignoring exists for Chrome M77+.\n    // Safari ignores as well, exact version unknown but works in the same\n    // version that also ignores addIceCandidate(null).\n    if ((browserDetails.browser === 'chrome' && browserDetails.version < 78 || browserDetails.browser === 'firefox' && browserDetails.version < 68 || browserDetails.browser === 'safari') && arguments[0] && arguments[0].candidate === '') {\n      return Promise.resolve();\n    }\n    return nativeAddIceCandidate.apply(this, arguments);\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}