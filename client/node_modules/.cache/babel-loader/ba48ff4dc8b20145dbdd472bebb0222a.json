{"ast":null,"code":"/* global attachEvent */\n\nconst XMLHttpRequest = require(\"xmlhttprequest-ssl\");\nconst Polling = require(\"./polling\");\nconst Emitter = require(\"component-emitter\");\nconst {\n  pick\n} = require(\"../util\");\nconst globalThis = require(\"../globalThis\");\nconst debug = require(\"debug\")(\"engine.io-client:polling-xhr\");\n\n/**\n * Empty function\n */\n\nfunction empty() {}\nconst hasXHR2 = function () {\n  const xhr = new XMLHttpRequest({\n    xdomain: false\n  });\n  return null != xhr.responseType;\n}();\nclass XHR extends Polling {\n  /**\n   * XHR Polling constructor.\n   *\n   * @param {Object} opts\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n    if (typeof location !== \"undefined\") {\n      const isSSL = \"https:\" === location.protocol;\n      let port = location.port;\n\n      // some user agents have empty `location.port`\n      if (!port) {\n        port = isSSL ? 443 : 80;\n      }\n      this.xd = typeof location !== \"undefined\" && opts.hostname !== location.hostname || port !== opts.port;\n      this.xs = opts.secure !== isSSL;\n    }\n    /**\n     * XHR supports binary\n     */\n    const forceBase64 = opts && opts.forceBase64;\n    this.supportsBinary = hasXHR2 && !forceBase64;\n  }\n\n  /**\n   * Creates a request.\n   *\n   * @param {String} method\n   * @api private\n   */\n  request() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    Object.assign(opts, {\n      xd: this.xd,\n      xs: this.xs\n    }, this.opts);\n    return new Request(this.uri(), opts);\n  }\n\n  /**\n   * Sends data.\n   *\n   * @param {String} data to send.\n   * @param {Function} called upon flush.\n   * @api private\n   */\n  doWrite(data, fn) {\n    const req = this.request({\n      method: \"POST\",\n      data: data\n    });\n    const self = this;\n    req.on(\"success\", fn);\n    req.on(\"error\", function (err) {\n      self.onError(\"xhr post error\", err);\n    });\n  }\n\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n  doPoll() {\n    debug(\"xhr poll\");\n    const req = this.request();\n    const self = this;\n    req.on(\"data\", function (data) {\n      self.onData(data);\n    });\n    req.on(\"error\", function (err) {\n      self.onError(\"xhr poll error\", err);\n    });\n    this.pollXhr = req;\n  }\n}\nclass Request extends Emitter {\n  /**\n   * Request constructor\n   *\n   * @param {Object} options\n   * @api public\n   */\n  constructor(uri, opts) {\n    super();\n    this.opts = opts;\n    this.method = opts.method || \"GET\";\n    this.uri = uri;\n    this.async = false !== opts.async;\n    this.data = undefined !== opts.data ? opts.data : null;\n    this.create();\n  }\n\n  /**\n   * Creates the XHR object and sends the request.\n   *\n   * @api private\n   */\n  create() {\n    const opts = pick(this.opts, \"agent\", \"enablesXDR\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\");\n    opts.xdomain = !!this.opts.xd;\n    opts.xscheme = !!this.opts.xs;\n    const xhr = this.xhr = new XMLHttpRequest(opts);\n    const self = this;\n    try {\n      debug(\"xhr open %s: %s\", this.method, this.uri);\n      xhr.open(this.method, this.uri, this.async);\n      try {\n        if (this.opts.extraHeaders) {\n          xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n          for (let i in this.opts.extraHeaders) {\n            if (this.opts.extraHeaders.hasOwnProperty(i)) {\n              xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n            }\n          }\n        }\n      } catch (e) {}\n      if (\"POST\" === this.method) {\n        try {\n          xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n        } catch (e) {}\n      }\n      try {\n        xhr.setRequestHeader(\"Accept\", \"*/*\");\n      } catch (e) {}\n\n      // ie6 check\n      if (\"withCredentials\" in xhr) {\n        xhr.withCredentials = this.opts.withCredentials;\n      }\n      if (this.opts.requestTimeout) {\n        xhr.timeout = this.opts.requestTimeout;\n      }\n      if (this.hasXDR()) {\n        xhr.onload = function () {\n          self.onLoad();\n        };\n        xhr.onerror = function () {\n          self.onError(xhr.responseText);\n        };\n      } else {\n        xhr.onreadystatechange = function () {\n          if (4 !== xhr.readyState) return;\n          if (200 === xhr.status || 1223 === xhr.status) {\n            self.onLoad();\n          } else {\n            // make sure the `error` event handler that's user-set\n            // does not throw in the same tick and gets caught here\n            setTimeout(function () {\n              self.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n            }, 0);\n          }\n        };\n      }\n      debug(\"xhr data %s\", this.data);\n      xhr.send(this.data);\n    } catch (e) {\n      // Need to defer since .create() is called directly from the constructor\n      // and thus the 'error' event can only be only bound *after* this exception\n      // occurs.  Therefore, also, we cannot throw here at all.\n      setTimeout(function () {\n        self.onError(e);\n      }, 0);\n      return;\n    }\n    if (typeof document !== \"undefined\") {\n      this.index = Request.requestsCount++;\n      Request.requests[this.index] = this;\n    }\n  }\n\n  /**\n   * Called upon successful response.\n   *\n   * @api private\n   */\n  onSuccess() {\n    this.emit(\"success\");\n    this.cleanup();\n  }\n\n  /**\n   * Called if we have data.\n   *\n   * @api private\n   */\n  onData(data) {\n    this.emit(\"data\", data);\n    this.onSuccess();\n  }\n\n  /**\n   * Called upon error.\n   *\n   * @api private\n   */\n  onError(err) {\n    this.emit(\"error\", err);\n    this.cleanup(true);\n  }\n\n  /**\n   * Cleans up house.\n   *\n   * @api private\n   */\n  cleanup(fromError) {\n    if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n      return;\n    }\n    // xmlhttprequest\n    if (this.hasXDR()) {\n      this.xhr.onload = this.xhr.onerror = empty;\n    } else {\n      this.xhr.onreadystatechange = empty;\n    }\n    if (fromError) {\n      try {\n        this.xhr.abort();\n      } catch (e) {}\n    }\n    if (typeof document !== \"undefined\") {\n      delete Request.requests[this.index];\n    }\n    this.xhr = null;\n  }\n\n  /**\n   * Called upon load.\n   *\n   * @api private\n   */\n  onLoad() {\n    const data = this.xhr.responseText;\n    if (data !== null) {\n      this.onData(data);\n    }\n  }\n\n  /**\n   * Check if it has XDomainRequest.\n   *\n   * @api private\n   */\n  hasXDR() {\n    return typeof XDomainRequest !== \"undefined\" && !this.xs && this.enablesXDR;\n  }\n\n  /**\n   * Aborts the request.\n   *\n   * @api public\n   */\n  abort() {\n    this.cleanup();\n  }\n}\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\nif (typeof document !== \"undefined\") {\n  if (typeof attachEvent === \"function\") {\n    attachEvent(\"onunload\", unloadHandler);\n  } else if (typeof addEventListener === \"function\") {\n    const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\nfunction unloadHandler() {\n  for (let i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\nmodule.exports = XHR;\nmodule.exports.Request = Request;","map":{"version":3,"names":["XMLHttpRequest","require","Polling","Emitter","pick","globalThis","debug","empty","hasXHR2","xhr","xdomain","responseType","XHR","constructor","opts","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","supportsBinary","request","arguments","length","undefined","Object","assign","Request","uri","doWrite","data","fn","req","method","self","on","err","onError","doPoll","onData","pollXhr","async","create","xscheme","open","extraHeaders","setDisableHeaderCheck","i","hasOwnProperty","setRequestHeader","e","withCredentials","requestTimeout","timeout","hasXDR","onload","onLoad","onerror","responseText","onreadystatechange","readyState","status","setTimeout","send","document","index","requestsCount","requests","onSuccess","emit","cleanup","fromError","abort","XDomainRequest","enablesXDR","attachEvent","unloadHandler","addEventListener","terminationEvent","module","exports"],"sources":["E:/PFE/client/node_modules/engine.io-client/lib/transports/polling-xhr.js"],"sourcesContent":["/* global attachEvent */\n\nconst XMLHttpRequest = require(\"xmlhttprequest-ssl\");\nconst Polling = require(\"./polling\");\nconst Emitter = require(\"component-emitter\");\nconst { pick } = require(\"../util\");\nconst globalThis = require(\"../globalThis\");\n\nconst debug = require(\"debug\")(\"engine.io-client:polling-xhr\");\n\n/**\n * Empty function\n */\n\nfunction empty() {}\n\nconst hasXHR2 = (function() {\n  const xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\nclass XHR extends Polling {\n  /**\n   * XHR Polling constructor.\n   *\n   * @param {Object} opts\n   * @api public\n   */\n  constructor(opts) {\n    super(opts);\n\n    if (typeof location !== \"undefined\") {\n      const isSSL = \"https:\" === location.protocol;\n      let port = location.port;\n\n      // some user agents have empty `location.port`\n      if (!port) {\n        port = isSSL ? 443 : 80;\n      }\n\n      this.xd =\n        (typeof location !== \"undefined\" &&\n          opts.hostname !== location.hostname) ||\n        port !== opts.port;\n      this.xs = opts.secure !== isSSL;\n    }\n    /**\n     * XHR supports binary\n     */\n    const forceBase64 = opts && opts.forceBase64;\n    this.supportsBinary = hasXHR2 && !forceBase64;\n  }\n\n  /**\n   * Creates a request.\n   *\n   * @param {String} method\n   * @api private\n   */\n  request(opts = {}) {\n    Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n    return new Request(this.uri(), opts);\n  }\n\n  /**\n   * Sends data.\n   *\n   * @param {String} data to send.\n   * @param {Function} called upon flush.\n   * @api private\n   */\n  doWrite(data, fn) {\n    const req = this.request({\n      method: \"POST\",\n      data: data\n    });\n    const self = this;\n    req.on(\"success\", fn);\n    req.on(\"error\", function(err) {\n      self.onError(\"xhr post error\", err);\n    });\n  }\n\n  /**\n   * Starts a poll cycle.\n   *\n   * @api private\n   */\n  doPoll() {\n    debug(\"xhr poll\");\n    const req = this.request();\n    const self = this;\n    req.on(\"data\", function(data) {\n      self.onData(data);\n    });\n    req.on(\"error\", function(err) {\n      self.onError(\"xhr poll error\", err);\n    });\n    this.pollXhr = req;\n  }\n}\n\nclass Request extends Emitter {\n  /**\n   * Request constructor\n   *\n   * @param {Object} options\n   * @api public\n   */\n  constructor(uri, opts) {\n    super();\n    this.opts = opts;\n\n    this.method = opts.method || \"GET\";\n    this.uri = uri;\n    this.async = false !== opts.async;\n    this.data = undefined !== opts.data ? opts.data : null;\n\n    this.create();\n  }\n\n  /**\n   * Creates the XHR object and sends the request.\n   *\n   * @api private\n   */\n  create() {\n    const opts = pick(\n      this.opts,\n      \"agent\",\n      \"enablesXDR\",\n      \"pfx\",\n      \"key\",\n      \"passphrase\",\n      \"cert\",\n      \"ca\",\n      \"ciphers\",\n      \"rejectUnauthorized\"\n    );\n    opts.xdomain = !!this.opts.xd;\n    opts.xscheme = !!this.opts.xs;\n\n    const xhr = (this.xhr = new XMLHttpRequest(opts));\n    const self = this;\n\n    try {\n      debug(\"xhr open %s: %s\", this.method, this.uri);\n      xhr.open(this.method, this.uri, this.async);\n      try {\n        if (this.opts.extraHeaders) {\n          xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n          for (let i in this.opts.extraHeaders) {\n            if (this.opts.extraHeaders.hasOwnProperty(i)) {\n              xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n            }\n          }\n        }\n      } catch (e) {}\n\n      if (\"POST\" === this.method) {\n        try {\n          xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n        } catch (e) {}\n      }\n\n      try {\n        xhr.setRequestHeader(\"Accept\", \"*/*\");\n      } catch (e) {}\n\n      // ie6 check\n      if (\"withCredentials\" in xhr) {\n        xhr.withCredentials = this.opts.withCredentials;\n      }\n\n      if (this.opts.requestTimeout) {\n        xhr.timeout = this.opts.requestTimeout;\n      }\n\n      if (this.hasXDR()) {\n        xhr.onload = function() {\n          self.onLoad();\n        };\n        xhr.onerror = function() {\n          self.onError(xhr.responseText);\n        };\n      } else {\n        xhr.onreadystatechange = function() {\n          if (4 !== xhr.readyState) return;\n          if (200 === xhr.status || 1223 === xhr.status) {\n            self.onLoad();\n          } else {\n            // make sure the `error` event handler that's user-set\n            // does not throw in the same tick and gets caught here\n            setTimeout(function() {\n              self.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n            }, 0);\n          }\n        };\n      }\n\n      debug(\"xhr data %s\", this.data);\n      xhr.send(this.data);\n    } catch (e) {\n      // Need to defer since .create() is called directly from the constructor\n      // and thus the 'error' event can only be only bound *after* this exception\n      // occurs.  Therefore, also, we cannot throw here at all.\n      setTimeout(function() {\n        self.onError(e);\n      }, 0);\n      return;\n    }\n\n    if (typeof document !== \"undefined\") {\n      this.index = Request.requestsCount++;\n      Request.requests[this.index] = this;\n    }\n  }\n\n  /**\n   * Called upon successful response.\n   *\n   * @api private\n   */\n  onSuccess() {\n    this.emit(\"success\");\n    this.cleanup();\n  }\n\n  /**\n   * Called if we have data.\n   *\n   * @api private\n   */\n  onData(data) {\n    this.emit(\"data\", data);\n    this.onSuccess();\n  }\n\n  /**\n   * Called upon error.\n   *\n   * @api private\n   */\n  onError(err) {\n    this.emit(\"error\", err);\n    this.cleanup(true);\n  }\n\n  /**\n   * Cleans up house.\n   *\n   * @api private\n   */\n  cleanup(fromError) {\n    if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n      return;\n    }\n    // xmlhttprequest\n    if (this.hasXDR()) {\n      this.xhr.onload = this.xhr.onerror = empty;\n    } else {\n      this.xhr.onreadystatechange = empty;\n    }\n\n    if (fromError) {\n      try {\n        this.xhr.abort();\n      } catch (e) {}\n    }\n\n    if (typeof document !== \"undefined\") {\n      delete Request.requests[this.index];\n    }\n\n    this.xhr = null;\n  }\n\n  /**\n   * Called upon load.\n   *\n   * @api private\n   */\n  onLoad() {\n    const data = this.xhr.responseText;\n    if (data !== null) {\n      this.onData(data);\n    }\n  }\n\n  /**\n   * Check if it has XDomainRequest.\n   *\n   * @api private\n   */\n  hasXDR() {\n    return typeof XDomainRequest !== \"undefined\" && !this.xs && this.enablesXDR;\n  }\n\n  /**\n   * Aborts the request.\n   *\n   * @api public\n   */\n  abort() {\n    this.cleanup();\n  }\n}\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== \"undefined\") {\n  if (typeof attachEvent === \"function\") {\n    attachEvent(\"onunload\", unloadHandler);\n  } else if (typeof addEventListener === \"function\") {\n    const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (let i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}